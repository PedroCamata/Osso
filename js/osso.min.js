"use strict"; let labelInputAction = !1; document.addEventListener("click", e => { if (e.target.matches(".modal-btn") || e.target.matches(".modal")) { e.preventDefault(); var t = document.getElementsByClassName(e.target.target), s = !0; 0 === t.length && (t = document.getElementsByClassName("modal"), s = !1); for (const e of t) { if (e.classList.contains("modal-img-zoom")) return void e.remove(); e.classList.contains("show") ? e.classList.remove("show") : s && e.classList.add("show") } } else if (e.target.matches(".zoomable") && e.target.matches("img")) e.preventDefault(), document.getElementsByTagName("body")[0].innerHTML += "<div class='modal modal-img-zoom show'><div class= 'modal-body center'><div class= 'modal-close modal-btn'>x</div><img id='img-zoom' class='full' src='" + e.target.currentSrc + "'></div></div>"; else if (e.target.matches(".tab-btn")) { e.preventDefault(); var a = e.target, l = a.closest(".tabmenu").getAttribute("tab-group"); for (const e of document.getElementsByClassName(l)) for (const t of e.getElementsByClassName("tab")) t.classList.remove("show"); for (const e of document.querySelectorAll("." + l + " ." + a.getAttribute("tab"))) e.classList.contains("show") || e.classList.add("show"); for (const e of document.getElementsByClassName("tab-btn")) e.classList.remove("primary"), e.getAttribute("tab") == a.getAttribute("tab") && e.classList.add("primary") } else if (e.target.matches(".card-close")) { var o = e.target, n = o.closest(".card"); null == n && o.parentElement().remove(), n.remove() } if (e.target.matches(".dropdown button")) { let t = e.target.closest(".dropdown").getElementsByClassName("dropdown-content")[0]; "block" != t.style.display ? t.style.display = "block" : t.style.display = "none" } else { let e = document.getElementsByClassName("dropdown-content"); for (let t = 0; t < e.length; t++)e[t].style.display = "none" } if (e.target.matches(".labelInput .text")) { let t = e.target; t.closest(".labelInput").getElementsByClassName("input")[0].style.display = "inline-block", t.style.display = "none" } else if (!e.target.matches(".labelInput .input")) { let e = document.getElementsByClassName("labelInput"); for (let t = 0; t < e.length; t++) { let s = e[t].getElementsByClassName("input")[0], a = s.value, l = e[t].getElementsByClassName("text")[0]; a != l.innerHTML && labelInputAction && labelInputAction(s.name, a) && (l.innerHTML = a), l.style.display = "inherit", s.style.display = "" } } }, !1);